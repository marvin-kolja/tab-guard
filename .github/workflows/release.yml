# Inspired by: https://github.com/refined-github/refined-github/blob/main/.github/workflows/release.yml

env:
    DIST_DIR: dist
    PROJECT_NAME: tab-guard

name: Release
on:
    workflow_dispatch:
jobs:
    Version:
        outputs:
            created: ${{ env.DAILY_VERSION_CREATED }}
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
            -   uses: actions/setup-node@v4
                with:
                    node-version-file: package.json
                    cache: npm
            -   run: npm ci
            -   name: Test and build
                run: npm run build
            -   name: Create tag if necessary
                uses: fregante/daily-version-action@v2
            -   name: Update manifest.json with version ${{ env.DAILY_VERSION}}
                if: env.DAILY_VERSION_CREATED
                run: npx dot-json@1 "$DIST_DIR/manifest.json" version "$DAILY_VERSION"
            -   name: Package extension
                run: npm run package
            -   name: Ready for "submit" jobs
                if: env.DAILY_VERSION_CREATED
                uses: actions/upload-artifact@v4
                with:
                    name: ${{ env.DIST_DIR }}
                    path: ${{ env.DIST_DIR }}
            -   name: Create release
                if: env.DAILY_VERSION_CREATED
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run: |
                    FILENAME="$PROJECT_NAME-$DAILY_VERSION-for-local-testing-only.zip"
                    mv artifacts/tab-guard.zip $FILENAME
                    # Create as draft to curate it before sending it out
                    gh release create "$DAILY_VERSION" "$FILENAME" --draft --generate-notes
#    Chrome: TODO
    Firefox:
        if: needs.Version.outputs.created
        needs: Version
        name: Submit (Firefox)
        environment: Firefox
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
            -   uses: actions/download-artifact@v4
                with:
                    name: ${{ env.DIST_DIR }}
            -   name: Upload build and source code
                run: npx web-ext sign --channel listed
                env:
                    WEB_EXT_API_KEY: ${{ secrets.API_KEY }}
                    WEB_EXT_API_SECRET: ${{ secrets.API_SECRET }}
